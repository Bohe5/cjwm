<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sky.mapper.SetmealMapper">
    <!--
     insert标签：单条插入套餐主数据
     id="insert"：与SetmealMapper接口中insert方法名一致，唯一标识该SQL
     parameterType="Setmeal"：指定传入参数类型为Setmeal实体类
     useGeneratedKeys="true"：开启主键自动生成（适配MySQL自增主键）
     keyProperty="id"：将生成的套餐ID回写到Setmeal对象的id属性中（用于后续绑定套餐与菜品的关联关系）
   -->
<insert id="insert" parameterType="Setmeal" useGeneratedKeys="true" keyProperty="id">
    insert into setmeal (category_id, name, price, status, description, image, create_time, update_time, create_user, update_user)
    values (#{categoryId}, #{name}, #{price}, #{status}, #{description}, #{image}, #{createTime}, #{updateTime},
    #{createUser}, #{updateUser})
</insert>
    <!--
      select标签：套餐分页查询（关联分类表，返回包含分类名称的VO）
      id="pageQuery"：与SetmealMapper接口中pageQuery方法名一致
      resultType="com.sky.vo.SetmealVO"：查询结果映射到SetmealVO（视图对象，含套餐信息+分类名称）
      功能：支持多条件筛选，同时返回套餐所属分类名，适配后台管理页展示需求
    -->
    <select id="pageQuery" resultType="com.sky.vo.SetmealVO">
        select
        s.*,c.name categoryName
        from
        setmeal s
        left join
        category c
        on
        s.category_id = c.id
        <where>
            <if test="name != null">
                and s.name like concat('%',#{name},'%')
            </if>
            <if test="status != null">
                and s.status = #{status}
            </if>
            <if test="categoryId != null">
                and s.category_id = #{categoryId}
            </if>
        </where>
        order by s.create_time desc
    </select>
    <!--
      update标签：动态更新套餐信息
      id="update"：与SetmealMapper接口中update方法名一致
      parameterType="Setmeal"：指定传入参数为Setmeal实体类
      功能：仅更新传入非null的字段，避免覆盖数据库原有有效数据（如只改价格则其他字段不变）
    -->
    <update id="update" parameterType="Setmeal">
        update setmeal
        <set>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="categoryId != null">
                category_id = #{categoryId},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
            <if test="image != null">
                image = #{image},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser}
            </if>
        </set>
        where id = #{id}
    </update>
    <!--
      select标签：套餐基础列表查询（不关联分类表，返回Setmeal实体）
      id="list"：与SetmealMapper接口中list方法名一致
      parameterType="Setmeal"：传入参数为Setmeal实体（通过属性传递筛选条件）
      resultType="Setmeal"：查询结果映射到Setmeal实体类
      功能：适用于无需显示分类名的场景（如前端筛选套餐时只需要基础信息）
    -->
    <select id="list" parameterType="Setmeal" resultType="Setmeal">
        select * from setmeal
        <where>
            <if test="name != null">
                and name like concat('%',#{name},'%')
            </if>
            <if test="categoryId != null">
                and category_id = #{categoryId}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
        </where>
    </select>
    <!--
      select标签：按条件统计套餐数量
      id="countByMap"：与SetmealMapper接口中countByMap方法名一致
      resultType="java.lang.Integer"：返回结果为整数（统计数量）
      功能：用于运营统计或业务校验（如统计某分类下的启用套餐数）
    -->
    <select id="countByMap" resultType="java.lang.Integer">
        select count(id) from setmeal
        <where>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="categoryId != null">
                and category_id = #{categoryId}
            </if>
        </where>
    </select>


</mapper>